{"version":3,"sources":["assets/images/play-button.svg","assets/images/pause-button.svg","assets/images/reset-button.svg","assets/images/stop-button.svg","assets/images/user-icon.svg","assets/images/workout-icon.svg","assets/images/settings-icon.svg","assets/audio/school-bell.wav","assets/audio/boxing-bell.wav","assets/audio/blow-whistle.wav","constants/styles.js","components/ActivityHeader.js","utils/numbers.js","components/LineBreak.js","components/Counter.js","components/ControlButton.js","constants/images.js","components/Controls.js","constants/audio.js","screens/Workout.js","screens/User.js","screens/Settings.js","components/NavButton.js","components/NavFooter.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["module","exports","blue","lightBlue","white","black","overpass","fontFamily","centerFlexRow","display","flexDirection","justifyContent","alignItems","centerFlexCol","secondsToClockTime","seconds","mins","parseInt","secs","toString","length","flex","styles","colors","containerStyles","reps","totalSeconds","localStyles","container","height","text","margin","color","fontWeight","fontSize","style","width","borderBottom","secondsToColor","paddingTop","paddingBottom","breakContainer","LineBreak","onClick","value","icon","refProp","backgroundColor","border","padding","type","ref","src","alt","playButton","pauseButton","resetButton","stopButton","userIcon","workoutIcon","settingsIcon","playing","onPlayClick","onStopClick","onResetClick","resetRef","useRef","pausePlayRef","stopRef","handlePress","current","opacity","setTimeout","ControlButton","images","schoolBell","boxingBell","blowWhistle","audio","useState","setSeconds","setTotalSeconds","setReps","secsInterval","setSecsInterval","cooldown","setCooldown","bell","Audio","whistle","setSecondsInterval","setInterval","initCooldownInterval","clearInterval","interval","stopCooldownInterval","play","initActivityInteral","useEffect","ActivityHeader","Counter","Controls","size","continarStyles","history","useHistory","position","bottom","left","zIndex","settingsRef","workoutRef","userRef","path","console","log","push","NavButton","className","exact","to","Workout","Settings","User","NavFooter","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,yLCA5B,G,MACH,CACJC,KAAM,UACNC,UAAW,UACXC,MAAO,OACPC,MAAO,SALA,EAOL,CACFC,SAAU,CACNC,WAAY,qBATT,EAYL,CACFC,cAAe,CACXC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEhBC,cAAe,CACXJ,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,W,OClBhBE,ECLmB,SAAC,GAAmB,IAAhBC,EAAe,EAAfA,QACrBC,EAAOC,SAAUF,EAAU,GAAI,IAC/BG,EAAOD,SAAUF,EAAU,GAAI,IAErC,MAAM,GAAN,OACIC,EAAKG,WAAWC,OAAS,EAAzB,WAAiCJ,GAASA,EAD9C,YAGIE,EAAKC,WAAWC,OAAS,EAAzB,WAAiCF,GAASA,IDD1CG,EAAiBC,EAAXC,EAAWD,EAEV,cAIP,IAHJE,EAGG,EAHHA,gBACAC,EAEG,EAFHA,KACAC,EACG,EADHA,aAEMC,EAAc,CAChBC,UAAU,2BACHP,EAAKb,eADH,IAELG,eAAgB,eAChBkB,OAAQ,OACLL,GAEPM,KAAM,CACFC,OAAQ,EACRC,MAAOT,EAAOpB,UACd8B,WAAY,OACZC,SAAU,KAIlB,OACI,6BAASC,MAAOR,EAAYC,WACxB,uBAAGO,MAAOR,EAAYG,MAAtB,cAAoChB,EAAoB,CAAEC,QAASW,MACnE,uBAAGS,MAAOR,EAAYG,MAAtB,cAAoCL,IACpC,uBAAGU,MAAOR,EAAYG,MAAtB,cE9BG,cAAyB,IAArBM,EAAoB,EAApBA,MAAOJ,EAAa,EAAbA,MAChBL,EAAc,CAChBC,UAAW,CACPQ,MAAOA,GAAS,OAChBC,aAAa,aAAD,OAAeL,KAInC,OAAO,yBAAKG,MAAOR,EAAYC,aCH3BU,EFIe,SAAC,GAA2B,IAAxBvB,EAAuB,EAAvBA,QACnBiB,EAD0C,EAAdT,OACbpB,UAYnB,OAViB,IAAZY,EACDiB,EAAQ,QACY,IAAZjB,EACRiB,EAAQ,SACY,IAAZjB,EACRiB,EAAQ,MACY,IAAZjB,IACRiB,EAAQ,SAGLA,GEhBHX,EAAiBC,EAAXC,EAAWD,EAEV,cAAqC,IAAjCE,EAAgC,EAAhCA,gBAAiBT,EAAe,EAAfA,QAC1BY,EAAc,CAChBC,UAAU,aACNC,OAAQ,MACRO,MAAO,OACPG,WAAY,MACZC,cAAe,MACZhB,GAEPiB,eAAe,2BACRpB,EAAKR,eADE,IAEVF,eAAgB,eAChBkB,OAAQ,MACRO,MAAO,SAEXrB,QAAQ,yBACJc,OAAQ,MACRE,OAAQ,GACLV,EAAKb,eAHL,IAIHyB,WAAY,IACZC,SAAU,IACVF,MAAOT,EAAOpB,UACdqC,cAAe,SAIjBR,EAAQM,EAAgB,CAAEvB,UAASQ,WAEzC,OACI,6BAASY,MAAOR,EAAYC,WACxB,uBAAGO,MAAK,2BAAOR,EAAYZ,SAAnB,IAA4BiB,WAAUjB,GAAW,GACzD,yBAAKoB,MAAOR,EAAYc,gBACpB,kBAACC,EAAD,CACIN,MAAM,MACNJ,MAAOA,IAEX,kBAACU,EAAD,CACIN,MAAM,MACNJ,MAAOA,IAEX,kBAACU,EAAD,CACIN,MAAM,MACNJ,MAAOA,IAEX,kBAACU,EAAD,CACIN,MAAM,MACNJ,MAAOA,OCtDZ,cAMP,IALJW,EAKG,EALHA,QACAC,EAIG,EAJHA,MACAC,EAGG,EAHHA,KACAC,EAEG,EAFHA,QACAtB,EACG,EADHA,gBAEMG,EAAc,CAChBC,UAAU,yBACNmB,gBAAiB,cACjBC,OAAQ,QACLxB,GAHE,IAILyB,QAAS,KAIjB,OACI,4BACIC,KAAK,SACLf,MAAOR,EAAYC,UACnBe,QAASA,EACTQ,IAAKL,GAEL,yBAAKM,IAAKP,EAAMQ,IAAKT,M,uHCjBlB,GACXU,eACAC,gBACAC,gBACAC,eACAC,aACAC,gBACAC,kBCPIvC,EAASC,EAEF,cAKP,IAJJuC,EAIG,EAJHA,QACAC,EAGG,EAHHA,YACAC,EAEG,EAFHA,YACAC,EACG,EADHA,aAEMrC,EAAc,CAChBC,UAAU,2BACHP,EAAKb,eADH,IAELG,eAAgB,eAChByB,MAAO,OACPP,OAAQ,SAIVoC,EAAWC,iBAAQ,MACnBC,EAAeD,iBAAQ,MACvBE,EAAUF,iBAAQ,MAElBG,EAAc,SAAC,GAAe,IAAZlB,EAAW,EAAXA,IACpBA,EAAImB,QAAQnC,MAAMoC,QAAU,GAC5BC,YAAY,WACRrB,EAAImB,QAAQnC,MAAMoC,QAAU,IAC7B,MAgBP,OACI,6BAASpC,MAAOR,EAAYC,WACxB,kBAAC6C,EAAD,CACI3B,QAASmB,EACTtB,QATe,WACvB0B,EAAa,CAAElB,IAAKc,IACpBD,KAQQpB,MAAM,QACNC,KAAM6B,EAAOlB,cAEjB,kBAACiB,EAAD,CACI3B,QAASqB,EACTxB,QAvBc,WACtB0B,EAAa,CAAElB,IAAKgB,IACpBL,KAsBQlB,MAAM,aACNC,KAAMgB,EAAUa,EAAOnB,YAAcmB,EAAOpB,aAEhD,kBAACmB,EAAD,CACI3B,QAASsB,EACTzB,QAzBc,WACtB0B,EAAa,CAAElB,IAAKiB,IACpBL,KAwBQnB,MAAM,OACNC,KAAM6B,EAAOjB,e,mDC/Dd,GACXkB,eACAC,eACAC,iBCCID,EAA4BE,EAA5BF,WAAYC,EAAgBC,EAAhBD,YAEL,cAA4B,IAAxBrD,EAAuB,EAAvBA,gBAAuB,EACRuD,mBAAU,IADF,mBAC/BhE,EAD+B,KACtBiE,EADsB,OAEED,mBAAU,GAFZ,mBAE/BrD,EAF+B,KAEjBuD,EAFiB,OAGdF,mBAAU,GAHI,mBAG/BtD,EAH+B,KAGzByD,EAHyB,OAIEH,mBAAU,MAJZ,mBAI/BI,EAJ+B,KAIjBC,EAJiB,OAKNL,oBAAU,GALJ,mBAK/BM,EAL+B,KAKrBC,EALqB,KAMhCC,EAAO,IAAIC,MAAOZ,GAClBa,EAAU,IAAID,MAAOX,GAIrBa,EAAqB,kBAAMC,aAAa,WAE1C,OADAV,GAAiB,SAAElE,GAAF,OAAeA,EAAU,KACnCiE,GAAY,SAAEjE,GAAF,OAAeA,EAAU,OAC7C,MAwBG6E,EAAuB,WACzBN,GAAa,GACbN,EAAY,IACZa,cAAeV,GACf,IAAMW,EAjCwBH,aAAa,kBAAMX,GAAY,SAAEjE,GAAF,OAAeA,EAAU,OAAK,KAkC3FqE,EAAiBU,IAQfC,EAAuB,WACzBT,GAAa,GACbO,cAAeV,GACfC,EAAiB,MATO,WACxBJ,EAAY,IACZ,IAAMc,EAAWJ,IACjBN,EAAiBU,GACjBL,EAAQO,OAMRC,IASJC,qBAAW,WACFnF,EAAU,IACNsE,EACDU,KATRd,GAAiB,SAAElE,GAAF,OAAeA,KAChCmE,GAAS,SAAEzD,GAAF,OAAYA,EAAO,KAC5BmE,IACAL,EAAKS,WAWN,CAACjF,IAEJ,IAAMY,EAAc,CAChBC,UAAU,aACNC,OAAQ,OACRO,MAAO,QACJZ,IAIX,OACI,0BAAMW,MAAOR,EAAYC,WACrB,kBAACuE,EAAD,CACI1E,KAAMA,EACNC,aAAcA,IAElB,kBAAC0E,EAAD,CACIrF,QAASA,IAEb,kBAACsF,EAAD,CACIxC,QAASsB,EACTrB,YA7EY,WACpB,GAAKqB,EAGD,OAFAU,cAAeV,QACfC,EAAiB,MAGrB,IAAMU,EAAWJ,IACjBN,EAAiBU,GACjBL,EAAQO,QAsEAhC,aA/Da,WACrBkB,EAAS,GACTF,EAAY,IACZC,EAAiB,GACjBK,GAAa,GACbF,EAAiB,OA2DTrB,YArEY,WACpB8B,cAAeV,GACfC,EAAiB,MACjBJ,EAAY,SCrCL,cAA4B,IAAxBxD,EAAuB,EAAvBA,gBACTG,EAAc,CAChBC,UAAU,eACHJ,IAIX,OACI,yBAAKW,MAAOR,EAAYC,aCRjB,cAA4B,IAAxBJ,EAAuB,EAAvBA,gBACTG,EAAc,CAChBC,UAAU,eACHJ,IAIX,OACI,yBAAKW,MAAOR,EAAYC,aCNxBP,EAASC,EAEF,eAOP,IANJqB,EAMG,EANHA,QACAC,EAKG,EALHA,MACAC,EAIG,EAJHA,KACAyD,EAGG,EAHHA,KACAxD,EAEG,EAFHA,QACAyD,EACG,EADHA,eAEM5E,EAAc,CAChBC,UAAU,2BACHP,EAAKR,eADH,IAELkC,gBAAiB,cACjBlB,OAAO,GAAD,OAAKyE,EAAL,MACNlE,MAAM,GAAD,OAAKkE,EAAL,MACLtD,OAAQ,QACLuD,IAIX,OACI,yBACIrD,KAAK,SACLf,MAAOR,EAAYC,UACnBe,QAASA,EACTQ,IAAKL,GAEL,yBAAKM,IAAKP,EAAMQ,IAAKT,MCvBzBvB,GAASC,EAEF,eAA4B,IAAxBE,EAAuB,EAAvBA,gBACTgF,EAAUC,cACV9E,EAAc,CAChBC,UAAU,2BACHP,GAAKb,eADH,IAELG,eAAgB,eAChB+F,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNxE,MAAO,QACPP,OAAQ,MACRkB,gBAAiB,UACjB8D,OAAQ,KACLrF,IAILsF,EAAc5C,iBAAQ,MACtB6C,EAAa7C,iBAAQ,MACrB8C,EAAU9C,iBAAQ,MAElBG,EAAc,SAAC,GAAqB,IAAlBlB,EAAiB,EAAjBA,IAAK8D,EAAY,EAAZA,KACzB9D,EAAImB,QAAQnC,MAAMoC,QAAU,GAC5BC,YAAY,WACRrB,EAAImB,QAAQnC,MAAMoC,QAAU,IAC7B,KAEH2C,QAAQC,IAAKX,GAEbA,EAAQY,KAAMH,IAOlB,OACI,4BAAQ9E,MAAOR,EAAYC,WACvB,kBAACyF,GAAD,CACIvE,QAASgE,EACTjE,KAAM6B,EAAOd,aACbjB,QATgB,kBAAM0B,EAAa,CAAElB,IAAK2D,EAAaG,KAAM,iBAWjE,kBAACI,GAAD,CACIvE,QAASiE,EACTlE,KAAM6B,EAAOf,YACbhB,QAbe,kBAAM0B,EAAa,CAAElB,IAAK4D,EAAYE,KAAM,gBAe/D,kBAACI,GAAD,CACIvE,QAASkE,EACTnE,KAAM6B,EAAOhB,SACbf,QAjBa,kBAAM0B,EAAa,CAAElB,IAAK6D,EAASC,KAAM,cC7BvD,cACX,IAAMtF,EAAc,CAChBC,UAAU,2BACHN,EAAYhB,UADV,IAELuB,OAAQ,QACRO,MAAO,QACPW,gBAAiB,aAIzB,OACI,yBAAKuE,UAAU,MAAMnF,MAAOR,EAAYC,WACpC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2F,OAAK,EAACN,KAAK,KACd,kBAAC,IAAD,CAAUO,GAAG,cAEjB,kBAAC,IAAD,CAAOD,OAAK,EAACN,KAAK,YACd,kBAACQ,EAAD,OAEJ,kBAAC,IAAD,CAAOF,OAAK,EAACN,KAAK,aACd,kBAACS,EAAD,OAEJ,kBAAC,IAAD,CAAOH,OAAK,EAACN,KAAK,SACd,kBAACU,EAAD,QAGR,kBAACC,GAAD,SC9BIC,QACa,cAA7BC,OAAOC,SAASC,UAEgB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAO,2DClBvC,IAceC,GAdS,SAAEC,GACjBA,GAAeA,aAAuBC,UACvC,6BAAuBC,MAAM,YAErB,IADJC,EACG,EADHA,OAAQC,EACL,EADKA,OAAQC,EACb,EADaA,OAAQC,EACrB,EADqBA,OAAQC,EAC7B,EAD6BA,QAEhCJ,EAAQH,GACRI,EAAQJ,GACRK,EAAQL,GACRM,EAAQN,GACRO,EAASP,OCFrBQ,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAgB,SFsHpB,kBAAmBC,WACpBA,UAAUC,cAAcC,MACnBb,MAAM,SAAEc,GACLA,EAAaC,gBAEhBC,OAAO,SAAEC,GACNpC,QAAQoC,MAAOA,EAAMC,YEjHrCrB,O","file":"static/js/main.177d38bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play-button.a77a6097.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause-button.482bf33f.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset-button.9bba097a.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop-button.3a0b1d40.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-icon.6504c962.svg\";","module.exports = __webpack_public_path__ + \"static/media/workout-icon.a6119952.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings-icon.0cf138b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/school-bell.0163862e.wav\";","module.exports = __webpack_public_path__ + \"static/media/boxing-bell.6747ce2e.wav\";","module.exports = __webpack_public_path__ + \"static/media/blow-whistle.f3b7b6a6.wav\";","export default {\n    colors: {\n        blue: '#123652',\n        lightBlue: '#A7B7C3',\n        white: '#fff',\n        black: '#000',\n    },\n    font: {\n        overpass: {\n            fontFamily: 'Lato, sans-serif',\n        },\n    },\n    flex: {\n        centerFlexRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        centerFlexCol: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n    },\n};\n","import React from 'react';\n\nimport styles from '../constants/styles';\nimport numbersUtil from '../utils/numbers';\n\nconst { secondsToClockTime } = numbersUtil;\nconst { flex, colors } = styles;\n\nexport default ( {\n    containerStyles,\n    reps,\n    totalSeconds,\n} ) => {\n    const localStyles = {\n        container: {\n            ...flex.centerFlexRow,\n            justifyContent: 'space-around',\n            height: '10%',\n            ...containerStyles,\n        },\n        text: {\n            margin: 0,\n            color: colors.lightBlue,\n            fontWeight: 'bold',\n            fontSize: 22,\n        },\n    };\n\n    return (\n        <section style={localStyles.container}>\n            <p style={localStyles.text}>{`T - ${secondsToClockTime( { seconds: totalSeconds } )}`}</p>\n            <p style={localStyles.text}>{`R - ${reps}`}</p>\n            <p style={localStyles.text}>T - 4:00</p>\n        </section>\n    );\n};\n","const secondsToClockTime = ( { seconds } ) => {\n    const mins = parseInt( seconds / 60, 10 );\n    const secs = parseInt( seconds % 60, 10 );\n\n    return `${\n        mins.toString().length < 2 ? `0${mins}` : mins\n    }:${\n        secs.toString().length < 2 ? `0${secs}` : secs\n    }`;\n};\n\nconst secondsToColor = ( { seconds, colors } ) => {\n    let color = colors.lightBlue;\n\n    if ( seconds === 3 ) {\n        color = 'green';\n    } else if ( seconds === 2 ) {\n        color = 'orange';\n    } else if ( seconds === 1 ) {\n        color = 'red';\n    } else if ( seconds === 0 ) {\n        color = 'white';\n    }\n\n    return color;\n};\n\nexport default {\n    secondsToClockTime,\n    secondsToColor,\n};\n","import React from 'react';\n\nexport default ( { width, color } ) => {\n    const localStyles = {\n        container: {\n            width: width || '100%',\n            borderBottom: `4px solid ${color}`,\n        },\n    };\n\n    return <div style={localStyles.container} />;\n};\n","import React from 'react';\n\nimport LineBreak from './LineBreak';\n\nimport numberUtils from '../utils/numbers';\nimport styles from '../constants/styles';\n\nconst { secondsToColor } = numberUtils;\nconst { flex, colors } = styles;\n\nexport default ( { containerStyles, seconds } ) => {\n    const localStyles = {\n        container: {\n            height: '35%',\n            width: '100%',\n            paddingTop: '15%',\n            paddingBottom: '5%',\n            ...containerStyles,\n        },\n        breakContainer: {\n            ...flex.centerFlexCol,\n            justifyContent: 'space-around',\n            height: '25%',\n            width: '100%',\n        },\n        seconds: {\n            height: '55%',\n            margin: 0,\n            ...flex.centerFlexRow,\n            fontWeight: 500,\n            fontSize: 200,\n            color: colors.lightBlue,\n            paddingBottom: '10%',\n        },\n    };\n\n    const color = secondsToColor( { seconds, colors } );\n\n    return (\n        <section style={localStyles.container}>\n            <p style={{ ...localStyles.seconds, color }}>{seconds || 0}</p>\n            <div style={localStyles.breakContainer}>\n                <LineBreak\n                    width=\"85%\"\n                    color={color}\n                />\n                <LineBreak\n                    width=\"55%\"\n                    color={color}\n                />\n                <LineBreak\n                    width=\"35%\"\n                    color={color}\n                />\n                <LineBreak\n                    width=\"15%\"\n                    color={color}\n                />\n            </div>\n        </section>\n    );\n};\n","import React from 'react';\n\nexport default ( {\n    onClick,\n    value,\n    icon,\n    refProp,\n    containerStyles,\n} ) => {\n    const localStyles = {\n        container: {\n            backgroundColor: 'transparent',\n            border: 'none',\n            ...containerStyles,\n            padding: 0,\n        },\n    };\n\n    return (\n        <button\n            type=\"button\"\n            style={localStyles.container}\n            onClick={onClick}\n            ref={refProp}\n        >\n            <img src={icon} alt={value} />\n        </button>\n    );\n};\n","import playButton from '../assets/images/play-button.svg';\nimport pauseButton from '../assets/images/pause-button.svg';\nimport resetButton from '../assets/images/reset-button.svg';\nimport stopButton from '../assets/images/stop-button.svg';\nimport userIcon from '../assets/images/user-icon.svg';\nimport workoutIcon from '../assets/images/workout-icon.svg';\nimport settingsIcon from '../assets/images/settings-icon.svg';\n\nexport default {\n    playButton,\n    pauseButton,\n    resetButton,\n    stopButton,\n    userIcon,\n    workoutIcon,\n    settingsIcon,\n};\n","/* eslint-disable no-param-reassign */\nimport React, { useRef } from 'react';\n\nimport ControlButton from './ControlButton';\n\nimport styles from '../constants/styles';\nimport images from '../constants/images';\n\nconst { flex } = styles;\n\nexport default ( {\n    playing,\n    onPlayClick,\n    onStopClick,\n    onResetClick,\n} ) => {\n    const localStyles = {\n        container: {\n            ...flex.centerFlexRow,\n            justifyContent: 'space-around',\n            width: '100%',\n            height: '30%',\n        },\n    };\n\n    const resetRef = useRef( null );\n    const pausePlayRef = useRef( null );\n    const stopRef = useRef( null );\n\n    const handlePress = ( { ref } ) => {\n        ref.current.style.opacity = 0.4;\n        setTimeout( () => {\n            ref.current.style.opacity = 1;\n        }, 200 );\n    };\n\n    const handleOnPlayClick = () => {\n        handlePress( { ref: pausePlayRef } );\n        onPlayClick();\n    };\n    const handleOnStopClick = () => {\n        handlePress( { ref: stopRef } );\n        onStopClick();\n    };\n    const handleOnResetClick = () => {\n        handlePress( { ref: resetRef } );\n        onResetClick();\n    };\n\n    return (\n        <section style={localStyles.container}>\n            <ControlButton\n                refProp={resetRef}\n                onClick={handleOnResetClick}\n                value=\"Reset\"\n                icon={images.resetButton}\n            />\n            <ControlButton\n                refProp={pausePlayRef}\n                onClick={handleOnPlayClick}\n                value=\"Play/Pause\"\n                icon={playing ? images.pauseButton : images.playButton}\n            />\n            <ControlButton\n                refProp={stopRef}\n                onClick={handleOnStopClick}\n                value=\"Stop\"\n                icon={images.stopButton}\n            />\n        </section>\n    );\n};\n","import schoolBell from '../assets/audio/school-bell.wav';\nimport boxingBell from '../assets/audio/boxing-bell.wav';\nimport blowWhistle from '../assets/audio/blow-whistle.wav';\n\nexport default {\n    schoolBell,\n    boxingBell,\n    blowWhistle,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport ActivityHeader from '../components/ActivityHeader';\nimport Counter from '../components/Counter';\nimport Controls from '../components/Controls';\n\nimport audio from '../constants/audio';\n\nconst { boxingBell, blowWhistle } = audio;\n\nexport default ( { containerStyles } ) => {\n    const [seconds, setSeconds] = useState( 20 );\n    const [totalSeconds, setTotalSeconds] = useState( 0 );\n    const [reps, setReps] = useState( 0 );\n    const [secsInterval, setSecsInterval] = useState( null );\n    const [cooldown, setCooldown] = useState( false );\n    const bell = new Audio( boxingBell );\n    const whistle = new Audio( blowWhistle );\n\n    const setCooldownInterval = () => setInterval( () => setSeconds( ( seconds ) => seconds - 1 ), 1000 );\n\n    const setSecondsInterval = () => setInterval( () => {\n        setTotalSeconds( ( seconds ) => seconds + 1 );\n        return setSeconds( ( seconds ) => seconds - 1 );\n    }, 1000 );\n\n    const handlePlayClick = () => {\n        if ( secsInterval ) {\n            clearInterval( secsInterval );\n            setSecsInterval( null );\n            return;\n        }\n        const interval = setSecondsInterval();\n        setSecsInterval( interval );\n        whistle.play();\n    };\n    const handleStopClick = () => {\n        clearInterval( secsInterval );\n        setSecsInterval( null );\n        setSeconds( 20 );\n    };\n    const handleResetClick = () => {\n        setReps( 0 );\n        setSeconds( 20 );\n        setTotalSeconds( 0 );\n        setCooldown( false );\n        setSecsInterval( null );\n    };\n    const initCooldownInterval = () => {\n        setCooldown( true );\n        setSeconds( 10 );\n        clearInterval( secsInterval );\n        const interval = setCooldownInterval();\n        setSecsInterval( interval );\n    };\n    const initActivityInteral = () => {\n        setSeconds( 20 );\n        const interval = setSecondsInterval();\n        setSecsInterval( interval );\n        whistle.play();\n    };\n    const stopCooldownInterval = () => {\n        setCooldown( false );\n        clearInterval( secsInterval );\n        setSecsInterval( null );\n        initActivityInteral();\n    };\n    const stopActivityInterval = () => {\n        setTotalSeconds( ( seconds ) => seconds );\n        setReps( ( reps ) => reps + 1 );\n        initCooldownInterval();\n        bell.play();\n    };\n\n    useEffect( () => {\n        if ( seconds < 1 ) {\n            if ( cooldown ) {\n                stopCooldownInterval();\n            } else {\n                stopActivityInterval();\n            }\n        }\n    }, [seconds] );\n\n    const localStyles = {\n        container: {\n            height: '100%',\n            width: '100%',\n            ...containerStyles,\n        },\n    };\n\n    return (\n        <main style={localStyles.container}>\n            <ActivityHeader\n                reps={reps}\n                totalSeconds={totalSeconds}\n            />\n            <Counter\n                seconds={seconds}\n            />\n            <Controls\n                playing={secsInterval}\n                onPlayClick={handlePlayClick}\n                onResetClick={handleResetClick}\n                onStopClick={handleStopClick}\n            />\n        </main>\n    );\n};\n","import React from 'react';\n\nexport default ( { containerStyles } ) => {\n    const localStyles = {\n        container: {\n            ...containerStyles,\n        },\n    };\n\n    return (\n        <div style={localStyles.container} />\n    );\n};\n","import React from 'react';\n\nexport default ( { containerStyles } ) => {\n    const localStyles = {\n        container: {\n            ...containerStyles,\n        },\n    };\n\n    return (\n        <div style={localStyles.container} />\n    );\n};\n","import React from 'react';\n\nimport styles from '../constants/styles';\n\nconst { flex } = styles;\n\nexport default ( {\n    onClick,\n    value,\n    icon,\n    size,\n    refProp,\n    continarStyles,\n} ) => {\n    const localStyles = {\n        container: {\n            ...flex.centerFlexCol,\n            backgroundColor: 'transparent',\n            height: `${size}vw`,\n            width: `${size}vw`,\n            border: 'none',\n            ...continarStyles,\n        },\n    };\n\n    return (\n        <nav\n            type=\"button\"\n            style={localStyles.container}\n            onClick={onClick}\n            ref={refProp}\n        >\n            <img src={icon} alt={value} />\n        </nav>\n    );\n};\n","/* eslint-disable no-param-reassign */\nimport React, { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport NavButton from './NavButton';\n\nimport styles from '../constants/styles';\nimport images from '../constants/images';\n\nconst { flex } = styles;\n\nexport default ( { containerStyles } ) => {\n    const history = useHistory();\n    const localStyles = {\n        container: {\n            ...flex.centerFlexRow,\n            justifyContent: 'space-around',\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            width: '100vw',\n            height: '10%',\n            backgroundColor: '#A7B7C3',\n            zIndex: 1000,\n            ...containerStyles,\n        },\n    };\n\n    const settingsRef = useRef( null );\n    const workoutRef = useRef( null );\n    const userRef = useRef( null );\n\n    const handlePress = ( { ref, path } ) => {\n        ref.current.style.opacity = 0.4;\n        setTimeout( () => {\n            ref.current.style.opacity = 1;\n        }, 200 );\n\n        console.log( history );\n\n        history.push( path );\n    };\n\n    const handleSettingsClick = () => handlePress( { ref: settingsRef, path: '/settings' } );\n    const handleWorkoutClick = () => handlePress( { ref: workoutRef, path: '/workout' } );\n    const handleUsersClick = () => handlePress( { ref: userRef, path: 'user' } );\n\n    return (\n        <footer style={localStyles.container}>\n            <NavButton\n                refProp={settingsRef}\n                icon={images.settingsIcon}\n                onClick={handleSettingsClick}\n            />\n            <NavButton\n                refProp={workoutRef}\n                icon={images.workoutIcon}\n                onClick={handleWorkoutClick}\n            />\n            <NavButton\n                refProp={userRef}\n                icon={images.userIcon}\n                onClick={handleUsersClick}\n            />\n        </footer>\n    );\n};\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from 'react-router-dom';\n\nimport './App.css';\nimport styles from './constants/styles';\n\nimport Workout from './screens/Workout';\nimport User from './screens/User';\nimport Settings from './screens/Settings';\nimport NavFooter from './components/NavFooter';\n\nexport default () => {\n    const localStyles = {\n        container: {\n            ...styles.font.overpass,\n            height: '100vh',\n            width: '100vw',\n            backgroundColor: '#123652',\n        },\n    };\n\n    return (\n        <div className=\"App\" style={localStyles.container}>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Redirect to=\"/workout\" />\n                    </Route>\n                    <Route exact path=\"/workout\">\n                        <Workout />\n                    </Route>\n                    <Route exact path=\"/settings\">\n                        <Settings />\n                    </Route>\n                    <Route exact path=\"/user\">\n                        <User />\n                    </Route>\n                </Switch>\n                <NavFooter />\n            </Router>\n        </div>\n    );\n};\n","/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match( /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/ )\n);\n\nexport function register( config ) {\n    if ( process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator ) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL( process.env.PUBLIC_URL, window.location.href );\n        if ( publicUrl.origin !== window.location.origin ) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener( 'load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if ( isLocalhost ) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker( swUrl, config );\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then( () => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                } );\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW( swUrl, config );\n            }\n        } );\n    }\n}\n\nfunction registerValidSW( swUrl, config ) {\n    navigator.serviceWorker\n        .register( swUrl )\n        .then( ( registration ) => {\n            // eslint-disable-next-line no-param-reassign\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if ( installingWorker == null ) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if ( installingWorker.state === 'installed' ) {\n                        if ( navigator.serviceWorker.controller ) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if ( config && config.onUpdate ) {\n                                config.onUpdate( registration );\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log( 'Content is cached for offline use.' );\n\n                            // Execute callback\n                            if ( config && config.onSuccess ) {\n                                config.onSuccess( registration );\n                            }\n                        }\n                    }\n                };\n            };\n        } )\n        .catch( ( error ) => {\n            console.error( 'Error during service worker registration:', error );\n        } );\n}\n\nfunction checkValidServiceWorker( swUrl, config ) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch( swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    } )\n        .then( ( response ) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get( 'content-type' );\n            if (\n                response.status === 404\n        || ( contentType != null && contentType.indexOf( 'javascript' ) === -1 )\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then( ( registration ) => {\n                    registration.unregister().then( () => {\n                        window.location.reload();\n                    } );\n                } );\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW( swUrl, config );\n            }\n        } )\n        .catch( () => {\n            console.log( 'No internet connection found. App is running in offline mode.' );\n        } );\n}\n\nexport function unregister() {\n    if ( 'serviceWorker' in navigator ) {\n        navigator.serviceWorker.ready\n            .then( ( registration ) => {\n                registration.unregister();\n            } )\n            .catch( ( error ) => {\n                console.error( error.message );\n            } );\n    }\n}\n","const reportWebVitals = ( onPerfEntry ) => {\n    if ( onPerfEntry && onPerfEntry instanceof Function ) {\n        import( 'web-vitals' ).then( ( {\n            getCLS, getFID, getFCP, getLCP, getTTFB\n        } ) => {\n            getCLS( onPerfEntry );\n            getFID( onPerfEntry );\n            getFCP( onPerfEntry );\n            getLCP( onPerfEntry );\n            getTTFB( onPerfEntry );\n        } );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById( 'root' )\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}