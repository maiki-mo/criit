{"version":3,"sources":["constants/images.js","assets/images/play-button.svg","assets/images/pause-button.svg","assets/images/reset-button.svg","assets/images/stop-button.svg","assets/images/user-icon.svg","assets/images/workout-icon.svg","assets/images/settings-icon.svg","assets/audio/school-bell.wav","assets/audio/boxing-bell.wav","assets/audio/blow-whistle.wav","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/numbers.js","components/ActivityHeader.js","components/LineBreak.js","components/Counter.js","components/ControlButton.js","components/Controls.js","constants/audio.js","screens/Workout.js"],"names":["playButton","pauseButton","resetButton","stopButton","userIcon","workoutIcon","settingsIcon","module","exports","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","seconds","color","colors","lightBlue","secondsToClockTime","mins","parseInt","secs","flex","styles","containerStyles","reps","totalSeconds","localStyles","container","centerFlexRow","justifyContent","height","text","margin","fontWeight","fontSize","style","width","borderBottom","secondsToColor","numberUtils","paddingTop","paddingBottom","breakContainer","centerFlexCol","LineBreak","onClick","icon","refProp","backgroundColor","border","padding","type","ref","src","alt","playing","onPlayClick","onStopClick","onResetClick","resetRef","useRef","pausePlayRef","stopRef","handlePress","current","opacity","setTimeout","ControlButton","images","schoolBell","boxingBell","blowWhistle","audio","useState","setSeconds","setTotalSeconds","setReps","secsInterval","setSecsInterval","cooldown","setCooldown","bell","Audio","whistle","setSecondsInterval","setInterval","initCooldownInterval","clearInterval","interval","stopCooldownInterval","play","initActivityInteral","useEffect","ActivityHeader","Counter","Controls"],"mappings":"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","file":"static/js/3.ac5b5a73.chunk.js","sourcesContent":["import playButton from '../assets/images/play-button.svg';\nimport pauseButton from '../assets/images/pause-button.svg';\nimport resetButton from '../assets/images/reset-button.svg';\nimport stopButton from '../assets/images/stop-button.svg';\nimport userIcon from '../assets/images/user-icon.svg';\nimport workoutIcon from '../assets/images/workout-icon.svg';\nimport settingsIcon from '../assets/images/settings-icon.svg';\n\nexport default {\n    playButton,\n    pauseButton,\n    resetButton,\n    stopButton,\n    userIcon,\n    workoutIcon,\n    settingsIcon,\n};\n","module.exports = __webpack_public_path__ + \"static/media/play-button.a77a6097.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause-button.482bf33f.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset-button.9bba097a.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop-button.3a0b1d40.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-icon.6504c962.svg\";","module.exports = __webpack_public_path__ + \"static/media/workout-icon.a6119952.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings-icon.0cf138b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/school-bell.0163862e.wav\";","module.exports = __webpack_public_path__ + \"static/media/boxing-bell.6747ce2e.wav\";","module.exports = __webpack_public_path__ + \"static/media/blow-whistle.f3b7b6a6.wav\";","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const secondsToClockTime = ( { seconds } ) => {\n    const mins = parseInt( seconds / 60, 10 );\n    const secs = parseInt( seconds % 60, 10 );\n\n    return `${\n        mins.toString().length < 2 ? `0${mins}` : mins\n    }:${\n        secs.toString().length < 2 ? `0${secs}` : secs\n    }`;\n};\n\nconst secondsToColor = ( { seconds, colors } ) => {\n    let color = colors.lightBlue;\n\n    if ( seconds === 3 ) {\n        color = 'green';\n    } else if ( seconds === 2 ) {\n        color = 'orange';\n    } else if ( seconds === 1 ) {\n        color = 'red';\n    } else if ( seconds === 0 ) {\n        color = 'white';\n    }\n\n    return color;\n};\n\nexport default {\n    secondsToClockTime,\n    secondsToColor,\n};\n","import React from 'react';\n\nimport styles from '../constants/styles';\nimport numbersUtil from '../utils/numbers';\n\nconst { secondsToClockTime } = numbersUtil;\nconst { flex, colors } = styles;\n\nexport default ( {\n    containerStyles,\n    reps,\n    totalSeconds,\n} ) => {\n    const localStyles = {\n        container: {\n            ...flex.centerFlexRow,\n            justifyContent: 'space-around',\n            height: '10%',\n            ...containerStyles,\n        },\n        text: {\n            margin: 0,\n            color: colors.lightBlue,\n            fontWeight: 'bold',\n            fontSize: 22,\n        },\n    };\n\n    return (\n        <section style={localStyles.container}>\n            <p style={localStyles.text}>{`T - ${secondsToClockTime( { seconds: totalSeconds } )}`}</p>\n            <p style={localStyles.text}>{`R - ${reps}`}</p>\n            <p style={localStyles.text}>T - 4:00</p>\n        </section>\n    );\n};\n","import React from 'react';\n\nexport default ( { width, color } ) => {\n    const localStyles = {\n        container: {\n            width: width || '100%',\n            borderBottom: `4px solid ${color}`,\n        },\n    };\n\n    return <div style={localStyles.container} />;\n};\n","import React from 'react';\n\nimport LineBreak from './LineBreak';\n\nimport numberUtils from '../utils/numbers';\nimport styles from '../constants/styles';\n\nconst { secondsToColor } = numberUtils;\nconst { flex, colors } = styles;\n\nexport default ( { containerStyles, seconds } ) => {\n    const localStyles = {\n        container: {\n            height: '35%',\n            width: '100%',\n            paddingTop: '15%',\n            paddingBottom: '5%',\n            ...containerStyles,\n        },\n        breakContainer: {\n            ...flex.centerFlexCol,\n            justifyContent: 'space-around',\n            height: '25%',\n            width: '100%',\n        },\n        seconds: {\n            height: '55%',\n            margin: 0,\n            ...flex.centerFlexRow,\n            fontWeight: 500,\n            fontSize: 200,\n            color: colors.lightBlue,\n            paddingBottom: '10%',\n        },\n    };\n\n    const color = secondsToColor( { seconds, colors } );\n\n    return (\n        <section style={localStyles.container}>\n            <p style={{ ...localStyles.seconds, color }}>{seconds || 0}</p>\n            <div style={localStyles.breakContainer}>\n                <LineBreak\n                    width=\"85%\"\n                    color={color}\n                />\n                <LineBreak\n                    width=\"55%\"\n                    color={color}\n                />\n                <LineBreak\n                    width=\"35%\"\n                    color={color}\n                />\n                <LineBreak\n                    width=\"15%\"\n                    color={color}\n                />\n            </div>\n        </section>\n    );\n};\n","import React from 'react';\n\nexport default ( {\n    onClick,\n    value,\n    icon,\n    refProp,\n    containerStyles,\n} ) => {\n    const localStyles = {\n        container: {\n            backgroundColor: 'transparent',\n            border: 'none',\n            ...containerStyles,\n            padding: 0,\n        },\n    };\n\n    return (\n        <button\n            type=\"button\"\n            style={localStyles.container}\n            onClick={onClick}\n            ref={refProp}\n        >\n            <img src={icon} alt={value} />\n        </button>\n    );\n};\n","/* eslint-disable no-param-reassign */\nimport React, { useRef } from 'react';\n\nimport ControlButton from './ControlButton';\n\nimport styles from '../constants/styles';\nimport images from '../constants/images';\n\nconst { flex } = styles;\n\nexport default ( {\n    playing,\n    onPlayClick,\n    onStopClick,\n    onResetClick,\n} ) => {\n    const localStyles = {\n        container: {\n            ...flex.centerFlexRow,\n            justifyContent: 'space-around',\n            width: '100%',\n            height: '30%',\n        },\n    };\n\n    const resetRef = useRef( null );\n    const pausePlayRef = useRef( null );\n    const stopRef = useRef( null );\n\n    const handlePress = ( { ref } ) => {\n        ref.current.style.opacity = 0.4;\n        setTimeout( () => {\n            ref.current.style.opacity = 1;\n        }, 200 );\n    };\n\n    const handleOnPlayClick = () => {\n        handlePress( { ref: pausePlayRef } );\n        onPlayClick();\n    };\n    const handleOnStopClick = () => {\n        handlePress( { ref: stopRef } );\n        onStopClick();\n    };\n    const handleOnResetClick = () => {\n        handlePress( { ref: resetRef } );\n        onResetClick();\n    };\n\n    return (\n        <section style={localStyles.container}>\n            <ControlButton\n                refProp={resetRef}\n                onClick={handleOnResetClick}\n                value=\"Reset\"\n                icon={images.resetButton}\n            />\n            <ControlButton\n                refProp={pausePlayRef}\n                onClick={handleOnPlayClick}\n                value=\"Play/Pause\"\n                icon={playing ? images.pauseButton : images.playButton}\n            />\n            <ControlButton\n                refProp={stopRef}\n                onClick={handleOnStopClick}\n                value=\"Stop\"\n                icon={images.stopButton}\n            />\n        </section>\n    );\n};\n","import schoolBell from '../assets/audio/school-bell.wav';\nimport boxingBell from '../assets/audio/boxing-bell.wav';\nimport blowWhistle from '../assets/audio/blow-whistle.wav';\n\nexport default {\n    schoolBell,\n    boxingBell,\n    blowWhistle,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport ActivityHeader from '../components/ActivityHeader';\nimport Counter from '../components/Counter';\nimport Controls from '../components/Controls';\n\nimport audio from '../constants/audio';\n\nconst { boxingBell, blowWhistle } = audio;\n\nexport default ( { containerStyles } ) => {\n    const [seconds, setSeconds] = useState( 20 );\n    const [totalSeconds, setTotalSeconds] = useState( 0 );\n    const [reps, setReps] = useState( 0 );\n    const [secsInterval, setSecsInterval] = useState( null );\n    const [cooldown, setCooldown] = useState( false );\n    const bell = new Audio( boxingBell );\n    const whistle = new Audio( blowWhistle );\n\n    const setCooldownInterval = () => setInterval( () => setSeconds( ( seconds ) => seconds - 1 ), 1000 );\n\n    const setSecondsInterval = () => setInterval( () => {\n        setTotalSeconds( ( seconds ) => seconds + 1 );\n        return setSeconds( ( seconds ) => seconds - 1 );\n    }, 1000 );\n\n    const handlePlayClick = () => {\n        if ( secsInterval ) {\n            clearInterval( secsInterval );\n            setSecsInterval( null );\n            return;\n        }\n        const interval = setSecondsInterval();\n        setSecsInterval( interval );\n        whistle.play();\n    };\n    const handleStopClick = () => {\n        clearInterval( secsInterval );\n        setSecsInterval( null );\n        setSeconds( 20 );\n    };\n    const handleResetClick = () => {\n        setReps( 0 );\n        setSeconds( 20 );\n        setTotalSeconds( 0 );\n        setCooldown( false );\n        setSecsInterval( null );\n    };\n    const initCooldownInterval = () => {\n        setCooldown( true );\n        setSeconds( 10 );\n        clearInterval( secsInterval );\n        const interval = setCooldownInterval();\n        setSecsInterval( interval );\n    };\n    const initActivityInteral = () => {\n        setSeconds( 20 );\n        const interval = setSecondsInterval();\n        setSecsInterval( interval );\n        whistle.play();\n    };\n    const stopCooldownInterval = () => {\n        setCooldown( false );\n        clearInterval( secsInterval );\n        setSecsInterval( null );\n        initActivityInteral();\n    };\n    const stopActivityInterval = () => {\n        setTotalSeconds( ( seconds ) => seconds );\n        setReps( ( reps ) => reps + 1 );\n        initCooldownInterval();\n        bell.play();\n    };\n\n    useEffect( () => {\n        if ( seconds < 1 ) {\n            if ( cooldown ) {\n                stopCooldownInterval();\n            } else {\n                stopActivityInterval();\n            }\n        }\n    }, [seconds] );\n\n    const localStyles = {\n        container: {\n            height: '100%',\n            width: '100%',\n            ...containerStyles,\n        },\n    };\n\n    return (\n        <main style={localStyles.container}>\n            <ActivityHeader\n                reps={reps}\n                totalSeconds={totalSeconds}\n            />\n            <Counter\n                seconds={seconds}\n            />\n            <Controls\n                playing={secsInterval}\n                onPlayClick={handlePlayClick}\n                onResetClick={handleResetClick}\n                onStopClick={handleStopClick}\n            />\n        </main>\n    );\n};\n"],"sourceRoot":""}